-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local iIliIl1li1Ill111il1 = assert local lI1lI1Illllll11IIll = select local lIliI1l1i1ilIl1IlilIl = tonumber local lii1llI1iililli1l1I = unpack local lIll1iIIII1ili1ll11 = pcall local I1i1lIlli1l11liIill = setfenv local il11l11iIiIIIilI1II = setmetatable local ili11l1llIIiIiIIlII = type local IlII11lIIIil1il1iII = getfenv local I1iIiIll1lIlilii1il = tostring local li1iii1l1ill1iiiI11 = error local l1II1lliI1li1lI11lI = string.sub local lIliiiiIllIiI11liIlIi = string.byte local iiIIIIIIlI1Il11Illl = string.char local iiliiIiiIIlIIiii1i1 = string.rep local liI1i1lIl1I1liIiiII = string.gsub local lIlIIIll1l11i1lliI1Il = string.match local lIllIiI1lI1IilIlI1ilI = table.insert local il1IlIiIi11Il1llliI = lIliiiiIllIiI11liIlIi("9", 1) local IIi1lill1I1ii11l11i, Il1IlIIllIill1lI1li = #{60}, #{ 4008, 3765, 3476, 5467, 1521, 93, 6680, 717, 73, 6094, 236, 6703, 4827, 6457, 2834, 5907, 949, 5995, 4652, 4320, 6496, 5010, 5140, 5851 } + il1IlIiIi11Il1llliI + 130990 local i1IlI1iII11llii1III = {} local IlI1iil1111llll111l = 1 local Ii1I1I111l1il1IIiiI, lIlIiI1l1illIl1lIllIl local function iiliIi1ii1IiI1i1lII(lIll1iIliIiiiI1l11IIi, Illllll1I1l11l1lIIl) local i1liilllilliiIIllIi lIll1iIliIiiiI1l11IIi = liI1i1lIl1I1liIiiII(l1II1lliI1li1lI11lI(lIll1iIliIiiiI1l11IIi, 5), "..", function(lI1lIlIIIiIi1i1Iii1) if lIliiiiIllIiI11liIlIi(lI1lIlIIIiIi1i1Iii1, 2) == 72 then i1liilllilliiIIllIi = lIliI1l1i1ilIl1IlilIl(l1II1lliI1li1lI11lI(lI1lIlIIIiIi1i1Iii1, 1, 1)) return "" else local lIlI11iI1IiI1iiiI1i11 = iiIIIIIIlI1Il11Illl(lIliI1l1i1ilIl1IlilIl(lI1lIlIIIiIi1i1Iii1, 16)) if i1liilllilliiIIllIi then local IliiIIIl11I1ii1Il11 = iiliiIiiIIlIIiii1i1(lIlI11iI1IiI1iiiI1i11, i1liilllilliiIIllIi) i1liilllilliiIIllIi = nil return IliiIIIl11I1ii1Il11 else return lIlI11iI1IiI1iiiI1i11 end end end) local function lIli11llliI1Iii1lI1li() local IllllilIl1I1Iiil1ii = lIliiiiIllIiI11liIlIi(lIll1iIliIiiiI1l11IIi, IlI1iil1111llll111l, IlI1iil1111llll111l) IlI1iil1111llll111l = IlI1iil1111llll111l + 1 return IllllilIl1I1Iiil1ii end local function lIlIliIl11Il1i1IiiiI1() local IllllilIl1I1Iiil1ii, lIlI11iI1IiI1iiiI1i11, IliiIIIl11I1ii1Il11, il1I1l1liIll1ill1ll = lIliiiiIllIiI11liIlIi(lIll1iIliIiiiI1l11IIi, IlI1iil1111llll111l, IlI1iil1111llll111l + 3) IlI1iil1111llll111l = IlI1iil1111llll111l + 4 return il1I1l1liIll1ill1ll * 16777216 + IliiIIIl11I1ii1Il11 * 65536 + lIlI11iI1IiI1iiiI1i11 * 256 + IllllilIl1I1Iiil1ii end local function Illlll1llliIilliiII(I1iilli1liill1i11ii, lIlIIi1Il1lil1llIiill, lIIil1iiIli11i1liII) if lIIil1iiIli11i1liII then local l1lliIIiIIIlililIIi, ll1iliIII111il11ili = 0, 0 for iliIl111II1llliIliI = lIlIIi1Il1lil1llIiill, lIIil1iiIli11i1liII do l1lliIIiIIIlililIIi = l1lliIIiIIIlililIIi + 2 ^ ll1iliIII111il11ili * Illlll1llliIilliiII(I1iilli1liill1i11ii, iliIl111II1llliIliI) ll1iliIII111il11ili = ll1iliIII111il11ili + 1 end return l1lliIIiIIIlililIIi else local lI1IiiII11liilllIii = 2 ^ (lIlIIi1Il1lil1llIiill - 1) return lI1IiiII11liilllIii <= I1iilli1liill1i11ii % (lI1IiiII11liilllIii + lI1IiiII11liilllIii) and 1 or 0 end end local function lIliiIII1l1I11ii1iIIi() local IllllilIl1I1Iiil1ii, lIlI11iI1IiI1iiiI1i11 = lIlIliIl11Il1i1IiiiI1(), lIlIliIl11Il1i1IiiiI1() if IllllilIl1I1Iiil1ii == 0 and lIlI11iI1IiI1iiiI1i11 == 0 then return 0 end return (-2 * Illlll1llliIilliiII(lIlI11iI1IiI1iiiI1i11, 32) + 1) * 2 ^ (Illlll1llliIilliiII(lIlI11iI1IiI1iiiI1i11, 21, 31) - 1023) * ((Illlll1llliIilliiII(lIlI11iI1IiI1iiiI1i11, 1, 20) * 4294967296 + IllllilIl1I1Iiil1ii) / 4503599627370496 + 1) end local lIlIII11IlIIlii1l11il = bit or bit32 local lIliiii1iliII1ll11Ill = lIlIII11IlIIlii1l11il and lIlIII11IlIIlii1l11il.bxor or function(IllllilIl1I1Iiil1ii, lIlI11iI1IiI1iiiI1i11) local i1l1lilii1IiIll1IlI = 1 local IliiIIIl11I1ii1Il11 = 0 while IllllilIl1I1Iiil1ii > 0 and lIlI11iI1IiI1iiiI1i11 > 0 do local Ilii1ilIill1i1l1i1i = IllllilIl1I1Iiil1ii % 2 local lIllll1ilII1iIl1ll1Ii = lIlI11iI1IiI1iiiI1i11 % 2 if Ilii1ilIill1i1l1i1i ~= lIllll1ilII1iIl1ll1Ii then IliiIIIl11I1ii1Il11 = IliiIIIl11I1ii1Il11 + i1l1lilii1IiIll1IlI end IllllilIl1I1Iiil1ii = (IllllilIl1I1Iiil1ii - Ilii1ilIill1i1l1i1i) / 2 lIlI11iI1IiI1iiiI1i11 = (lIlI11iI1IiI1iiiI1i11 - lIllll1ilII1iIl1ll1Ii) / 2 i1l1lilii1IiIll1IlI = i1l1lilii1IiIll1IlI * 2 end if IllllilIl1I1Iiil1ii < lIlI11iI1IiI1iiiI1i11 then IllllilIl1I1Iiil1ii = lIlI11iI1IiI1iiiI1i11 end while IllllilIl1I1Iiil1ii > 0 do local Ilii1ilIill1i1l1i1i = IllllilIl1I1Iiil1ii % 2 if Ilii1ilIill1i1l1i1i > 0 then IliiIIIl11I1ii1Il11 = IliiIIIl11I1ii1Il11 + i1l1lilii1IiIll1IlI end IllllilIl1I1Iiil1ii = (IllllilIl1I1Iiil1ii - Ilii1ilIill1i1l1i1i) / 2 i1l1lilii1IiIll1IlI = i1l1lilii1IiIll1IlI * 2 end return IliiIIIl11I1ii1Il11 end local function I1lIIIi1l1lIII1il1I(ilIiIII1l1lllIi1I1i) local l1I1lil11l1llil1ii1 = { lIliiiiIllIiI11liIlIi(lIll1iIliIiiiI1l11IIi, IlI1iil1111llll111l, IlI1iil1111llll111l + 3) } IlI1iil1111llll111l = IlI1iil1111llll111l + 4 local IllllilIl1I1Iiil1ii = lIliiii1iliII1ll11Ill(l1I1lil11l1llil1ii1[1], lIlIiI1l1illIl1lIllIl) local lIlI11iI1IiI1iiiI1i11 = lIliiii1iliII1ll11Ill(l1I1lil11l1llil1ii1[2], lIlIiI1l1illIl1lIllIl) local IliiIIIl11I1ii1Il11 = lIliiii1iliII1ll11Ill(l1I1lil11l1llil1ii1[3], lIlIiI1l1illIl1lIllIl) local il1I1l1liIll1ill1ll = lIliiii1iliII1ll11Ill(l1I1lil11l1llil1ii1[4], lIlIiI1l1illIl1lIllIl) lIlIiI1l1illIl1lIllIl = (193 * lIlIiI1l1illIl1lIllIl + ilIiIII1l1lllIi1I1i) % 256 return il1I1l1liIll1ill1ll * 16777216 + IliiIIIl11I1ii1Il11 * 65536 + lIlI11iI1IiI1iiiI1i11 * 256 + IllllilIl1I1Iiil1ii end local function lI1iiIIIIiiIIlIil1i(I1Ii1I11iI1Illlil1l) local II111l1ililIiiiIIII = lIlIliIl11Il1i1IiiiI1() local liIIiiiiiIIlilIlIII = "" for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, II111l1ililIiiiIIII do liIIiiiiiIIlilIlIII = liIIiiiiiIIlilIlIII .. iiIIIIIIlI1Il11Illl(lIliiii1iliII1ll11Ill(lIliiiiIllIiI11liIlIi(lIll1iIliIiiiI1l11IIi, IlI1iil1111llll111l + iliIl111II1llliIliI - 1), Ii1I1I111l1il1IIiiI)) Ii1I1I111l1il1IIiiI = (I1Ii1I11iI1Illlil1l * Ii1I1I111l1il1IIiiI + 55) % 256 end IlI1iil1111llll111l = IlI1iil1111llll111l + II111l1ililIiiiIIII return liIIiiiiiIIlilIlIII end Ii1I1I111l1il1IIiiI = lIli11llliI1Iii1lI1li() lIlIiI1l1illIl1lIllIl = lIli11llliI1Iii1lI1li() local ii11iiiliiIl1liilIl = {} for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, lIli11llliI1Iii1lI1li() do local iIlllIlilil1llIIli1 = lIli11llliI1Iii1lI1li() local iilIlI1il1lllllilIl = (iliIl111II1llliIliI - 1) * 2 ii11iiiliiIl1liilIl[iilIlI1il1lllllilIl] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, 1, 4) ii11iiiliiIl1liilIl[iilIlI1il1lllllilIl + 1] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, 5, 8) end local function lIl1liIII11iiIillIiIi() local IIi1I1IlIiIliII1111 = { nil, {}, {}, nil, {}, nil, {} } lIli11llliI1Iii1lI1li() lIlIliIl11Il1i1IiiiI1() lIli11llliI1Iii1lI1li() lIli11llliI1Iii1lI1li() lIlIliIl11Il1i1IiiiI1() lIlIliIl11Il1i1IiiiI1() local llIl11iiliilIl1IiII = lIlIliIl11Il1i1IiiiI1() for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, llIl11iiliilIl1IiII do IIi1I1IlIiIliII1111[7][iliIl111II1llliIliI - IIi1lill1I1ii11l11i] = lIl1liIII11iiIillIiIi() end local llIl11iiliilIl1IiII = lIlIliIl11Il1i1IiiiI1() for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, llIl11iiliilIl1IiII do IIi1I1IlIiIliII1111[2][iliIl111II1llliIliI] = lIlIliIl11Il1i1IiiiI1() end lIli11llliI1Iii1lI1li() IIi1I1IlIiIliII1111[6] = lIli11llliI1Iii1lI1li() local llIl11iiliilIl1IiII = lIlIliIl11Il1i1IiiiI1() - (#{ 6891, 6526, 4135, 4562, 2554, 4818, 2608, 1410, 6812, 3582, 4893, 4163, 1823, 5872, 1952, 91, 3262, 1150, 5837, 4980, 5157, 4044, 529 } + il1IlIiIi11Il1llliI + 133677) local li1Iil1i1illIlIllli = lIli11llliI1Iii1lI1li() for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, llIl11iiliilIl1IiII do local lIlIIIlii11IiilliI11i local ili11l1llIIiIiIIlII = lIli11llliI1Iii1lI1li() if ili11l1llIIiIiIIlII == #{ 1971, 1363, 5522, 3702, 2973, 5365, 3408, 3051, 1481, 4987, 6769 } then lIlIIIlii11IiilliI11i = l1II1lliI1li1lI11lI(lI1iiIIIIiiIIlIil1i(insEncKey), #{3150, 2856}) end if ili11l1llIIiIiIIlII == #{ 1460, 2698, 2171, 3483, 2327, 4549, 3886, 5357, 2854 } then lIlIIIlii11IiilliI11i = lIliiIII1l1I11ii1iIIi() end if ili11l1llIIiIiIIlII == #{ 2702, 1236, 617, 3003, 1830, 2685, 2585, 6681, 5848, 3328, 2952, 1069, 6469, 28, 6159, 350, 2823, 4988, 2283, 6501 } + il1IlIiIi11Il1llliI + -1 then lIlIIIlii11IiilliI11i = #{ 5747, 5038, 5573, 5344, 98, 6930, 3029, 5357, 2776, 903, 4660, 4429, 3653, 163, 3568, 4633, 268, 6153, 1920, 2234, 5088, 6709, 756 } + il1IlIiIi11Il1llliI + 102948 == #{ 5747, 5038, 5573, 5344, 98, 6930, 3029, 5357, 2776, 903, 4660, 4429, 3653, 163, 3568, 4633, 268, 6153, 1920, 2234, 5088, 6709, 756 } + il1IlIiIi11Il1llliI + 102948 end if ili11l1llIIiIiIIlII == #{ 568, 3767, 4805, 2589, 4995, 2271, 1924, 1856, 6759, 1702, 1095, 3118, 1945, 2387, 2430, 4432, 3004, 3744, 2478, 4760, 6902, 5498, 4663, 840 } + il1IlIiIi11Il1llliI + 165 then lIlIIIlii11IiilliI11i = lIlIliIl11Il1i1IiiiI1() end if ili11l1llIIiIiIIlII == #{ 4834, 6383, 4664, 1578, 1755, 4031, 1448, 2804, 3894, 6033, 3682, 4130, 1183, 3306, 4257, 6309, 6773, 1652, 2590, 3250, 4976, 6501, 501, 5602 } + il1IlIiIi11Il1llliI + 50 then lIlIIIlii11IiilliI11i = #{ 3565, 3492, 535, 1759, 6436, 6744, 5822, 1555, 2157, 6497, 2548, 297, 3155, 2934, 6806, 6108, 1327, 2155, 6259, 1317, 6171, 1228, 1911, 1814 } + il1IlIiIi11Il1llliI + 19427 == #{ 4165, 26, 3811, 2724, 3401, 2164, 1578, 2026, 6436, 6799, 7, 3019, 1000, 6460, 1340, 6244, 3027, 6877, 2193, 833 } + il1IlIiIi11Il1llliI + 48487 end if ili11l1llIIiIiIIlII == #{ 6296, 2887, 86, 2441, 533, 701, 1262, 2936, 4552, 4611, 5228, 195, 4972, 444, 4563, 639, 6966, 4858, 3368, 3106 } + il1IlIiIi11Il1llliI + 131 then lIlIIIlii11IiilliI11i = lIli11llliI1Iii1lI1li() + lIlIliIl11Il1i1IiiiI1() + lIliiIII1l1I11ii1iIIi() end if ili11l1llIIiIiIIlII == #{ 1930, 2457, 6503, 6000, 2284, 186, 5924, 6431, 2008, 42, 1790, 4340, 6261, 1425, 1455, 1789, 5288, 2474, 6759, 4867, 70, 5914 } + il1IlIiIi11Il1llliI + 93 then lIlIIIlii11IiilliI11i = l1II1lliI1li1lI11lI(lI1iiIIIIiiIIlIil1i(li1Iil1i1illIlIllli), #{1165, 6053}) end if ili11l1llIIiIiIIlII == #{ 3376, 5327, 2262, 5259, 3609, 4543, 3329, 1338, 5585, 2141, 6272, 402, 4561, 1093, 4593, 1650, 6705, 6621, 3182, 3000, 1866, 1344, 697, 1879 } + il1IlIiIi11Il1llliI + 23 then lIlIIIlii11IiilliI11i = lIlIliIl11Il1i1IiiiI1() end if ili11l1llIIiIiIIlII == #{ 1515, 5096, 3755, 6816, 5850, 5811, 6540, 1219, 2378, 4461, 4059, 1841, 4200, 4, 2812, 4363, 5836, 2653, 5656, 6149, 6534, 1477, 5610, 4691 } + il1IlIiIi11Il1llliI + 162 then lIlIIIlii11IiilliI11i = lIlIliIl11Il1i1IiiiI1() end IIi1I1IlIiIliII1111[5][iliIl111II1llliIliI - IIi1lill1I1ii11l11i] = lIlIIIlii11IiilliI11i end local II1il1II1I1lliili1I = lIlIliIl11Il1i1IiiiI1() - (#{ 1224, 977, 3118, 1127, 3484, 6452, 1715, 3642, 492, 3748, 5845, 2549, 4002, 4271, 5122, 256, 3683, 5166, 1693, 2109, 2456, 4158, 1061, 5798 } + il1IlIiIi11Il1llliI + 133626) local I1lii1lI1i1ill1ilil = lIli11llliI1Iii1lI1li() for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, II1il1II1I1lliili1I do local lii1l1lI11i1IIIiiiI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iIlllIlilil1llIIli1 = I1lIIIi1l1lIII1il1I(I1lii1lI1i1ill1ilil) lii1l1lI11i1IIIiiiI[4] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{3916}, #{ 6473, 2194, 2784, 2112, 1737, 890, 3046, 3352, 4914 }) lii1l1lI11i1IIIiiiI[7] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{ 6373, 5481, 2407, 2162, 2945, 3095, 6852, 6276, 4640, 5421, 5175, 4324, 4978, 6098, 4543, 4148, 5567, 5367, 4116 }, #{ 4837, 1141, 5448, 1797, 823, 1000, 4817, 1820, 3453, 149, 5331, 3429, 2527, 5893, 2366, 2462, 6374, 3465, 2884, 4083, 5201, 782, 1447 } + il1IlIiIi11Il1llliI + -54) lii1l1lI11i1IIIiiiI[3] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{5186}, #{ 6368, 6483, 3356, 1008, 5751, 4741, 198, 6252, 3937, 2634, 6287, 4937, 2085, 1038, 7, 5509, 4019, 2458 }) lii1l1lI11i1IIIiiiI[5] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{ 509, 5466, 2886, 1473, 5575, 1896, 4859, 920, 5760, 6463, 6284, 6406, 1176, 4328, 2984, 5039, 2806, 3731, 1994, 426, 3074, 34, 1647, 2522 } + il1IlIiIi11Il1llliI + -54, #{ 5450, 5408, 862, 3258, 2649, 5766, 6209, 6710, 6197, 6329, 271, 387, 3127, 3546, 4958, 312, 6605, 5093, 1365, 3897, 16, 4429, 5366 } + il1IlIiIi11Il1llliI + -48) lii1l1lI11i1IIIiiiI[2] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{ 2172, 6489, 3453, 1777, 3829, 5261, 2902, 3356, 718, 5427 }, #{ 229, 1455, 4765, 2471, 813, 805, 1788, 1809, 4030, 3571, 2596, 1341, 2743, 4491, 6873, 528, 888, 1541 }) lii1l1lI11i1IIIiiiI[47873] = Illlll1llliIilliiII(iIlllIlilil1llIIli1, #{ 693, 6525, 2003, 1365, 5305, 5926, 1177, 6564, 4218, 2786 }, #{ 5048, 5735, 3250, 1037, 4161, 6227, 6936, 2181, 3776, 3455, 1510, 3466, 2909, 65, 2226, 2812, 4092, 4843 }) IIi1I1IlIiIliII1111[3][iliIl111II1llliIliI] = lii1l1lI11i1IIIiiiI end for iliIl111II1llliIliI = IIi1lill1I1ii11l11i, II1il1II1I1lliili1I do local lii1l1lI11i1IIIiiiI = IIi1I1IlIiIliII1111[3][iliIl111II1llliIliI] local lI1IiIIliI1IIIIlIiI = ii11iiiliiIl1liilIl[lii1l1lI11i1IIIiiiI[5]] if lI1IiIIliI1IIIIlIiI == #{5613, 1691} and lii1l1lI11i1IIIiiiI[2] > 255 then lii1l1lI11i1IIIiiiI[8] = true lii1l1lI11i1IIIiiiI[6] = IIi1I1IlIiIliII1111[5][lii1l1lI11i1IIIiiiI[2] - 256] end if lI1IiIIliI1IIIIlIiI == #{ 202, 2894, 3329 } then if lii1l1lI11i1IIIiiiI[4] > 255 then lii1l1lI11i1IIIiiiI[10] = true lii1l1lI11i1IIIiiiI[9] = IIi1I1IlIiIliII1111[5][lii1l1lI11i1IIIiiiI[4] - 256] end if lii1l1lI11i1IIIiiiI[2] > 255 then lii1l1lI11i1IIIiiiI[8] = true lii1l1lI11i1IIIiiiI[6] = IIi1I1IlIiIliII1111[5][lii1l1lI11i1IIIiiiI[2] - 256] end end if lI1IiIIliI1IIIIlIiI == #{ 1026, 3963, 6301, 6861 } then lii1l1lI11i1IIIiiiI[1] = IIi1I1IlIiIliII1111[5][lii1l1lI11i1IIIiiiI[3]] end if lI1IiIIliI1IIIIlIiI == #{1597} and lii1l1lI11i1IIIiiiI[4] > 255 then lii1l1lI11i1IIIiiiI[10] = true lii1l1lI11i1IIIiiiI[9] = IIi1I1IlIiIliII1111[5][lii1l1lI11i1IIIiiiI[4] - 256] end end lIlIliIl11Il1i1IiiiI1() lIli11llliI1Iii1lI1li() IIi1I1IlIiIliII1111[4] = lIli11llliI1Iii1lI1li() lIli11llliI1Iii1lI1li() lIlIliIl11Il1i1IiiiI1() IIi1I1IlIiIliII1111[1] = lIli11llliI1Iii1lI1li() lIlIliIl11Il1i1IiiiI1() return IIi1I1IlIiIliII1111 end local function IiI1iiI1illiIII1iII(IIi1I1IlIiIliII1111, Illllll1I1l11l1lIIl, lIlli1lilli1II1Iillii) local il1IiIl1I1liliIl11I, lIlIi1i1IiIiillI1l1i1 = 7, -1 local lIl11ll1II1ii1lI1li1I = IIi1I1IlIiIliII1111[3] local lIlIi1IIi1I1II11IlII1 = 1 local lIlIlIi1illIl11IIi1li = IIi1I1IlIiIliII1111[7] local il1I11IiIiIi11i1l1i = IIi1I1IlIiIliII1111[4] local i1I11li1I1l1iIl1l1l = IIi1I1IlIiIliII1111[6] local lIlIilIiIIllI1l1III1l = 5 local lIlIllll1Ilil1iI1l1li = IIi1I1IlIiIliII1111[2] local iIIllI1li1I1II1ii1i = 4 local function iIIi1ii1l1i1lIiIIi1(...) local lI1lII1Ii1lil1ilIil = 0 local iIl111lIiiIiiIlIli1 = { lii1llI1iililli1l1I({}, 1, i1I11li1I1l1iIl1l1l) } local il1iIl1i1lIiillIi1i = 1 local il1liI1Ii1iill1i1Il = {} local l1illill1il11lIlilI = {} local Illllll1I1l11l1lIIl = IlII11lIIIil1il1iII() local lIliIiI1l11lIl1lili1i = { ... } local lIlI1i1l1iiIilii1IlI1 = #lIliIiI1l11lIl1lili1i - 1 for iliIl111II1llliIliI = 0, lIlI1i1l1iiIilii1IlI1 do if iliIl111II1llliIliI < il1I11IiIiIi11i1l1i then iIl111lIiiIiiIlIli1[iliIl111II1llliIliI] = lIliIiI1l11lIl1lili1i[iliIl111II1llliIliI + 1] end end local function iII1II1iilI11111iII(...) local IliiIIIl11I1ii1Il11 = lI1lI1Illllll11IIll("#", ...) local lIlliliilIl1l1lllli11 = { ... } return IliiIIIl11I1ii1Il11, lIlliliilIl1l1lllli11 end local function lIlll1Illiii1I1lI11Ii() while true do local ll1IlllIl1iiiIiIiI1 = lIl11ll1II1ii1lI1li1I[il1iIl1i1lIiillIi1i] local iiIiiiIiIl1IiiiIiii = ll1IlllIl1iiiIiIiI1[5] il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + 1 if iiIiiiIiIl1IiiiIiii >= 9 then if iiIiiiIiIl1IiiiIiii >= 13 then if iiIiiiIiIl1IiiiIiii < 15 then if iiIiiiIiIl1IiiiIiii == 14 then if ll1IlllIl1iiiIiIiI1[2] == 143 then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i - 1 lIl11ll1II1ii1lI1li1I[il1iIl1i1lIiillIi1i] = { [5] = 13, [7] = (ll1IlllIl1iiiIiIiI1[7] - 185) % 256, [4] = (ll1IlllIl1iiiIiIiI1[4] - 185) % 256 } else iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = -iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] end else il1liI1Ii1iill1i1Il[iIl111lIiiIiiIlIli1] = nil local iIlIIli1lIli1i11IiI = ll1IlllIl1iiiIiIiI1[7] local iiliiiiillIl1iiliiI = ll1IlllIl1iiiIiIiI1[4] if iiliiiiillIl1iiliiI == 1 then return true end local lIlliIIlIilli1Iii1iIl = iIlIIli1lIli1i11IiI + iiliiiiillIl1iiliiI - 2 if iiliiiiillIl1iiliiI == 0 then lIlliIIlIilli1Iii1iIl = lI1lII1Ii1lil1ilIil end return true, iIlIIli1lIli1i11IiI, lIlliIIlIilli1Iii1iIl end elseif iiIiiiIiIl1IiiiIiii < 16 then local iIlIIli1lIli1i11IiI = ll1IlllIl1iiiIiIiI1[7] local lIliIiI1l11lIl1lili1i = ll1IlllIl1iiiIiIiI1[4] local i1Il1111iil1Ili1Ili = ll1IlllIl1iiiIiIiI1[2] local lIlIIi1i1Ii1lI1Ill1ll, lIlliIIlIilli1Iii1iIl, lIlll1Illiii1I1lI11Ii if lIliIiI1l11lIl1lili1i ~= 1 then if lIliIiI1l11lIl1lili1i ~= 0 then lIlliIIlIilli1Iii1iIl = iIlIIli1lIli1i11IiI + lIliIiI1l11lIl1lili1i - 1 else lIlliIIlIilli1Iii1iIl = lI1lII1Ii1lil1ilIil end lIlliIIlIilli1Iii1iIl, lIlIIi1i1Ii1lI1Ill1ll = iII1II1iilI11111iII(iIl111lIiiIiiIlIli1[iIlIIli1lIli1i11IiI](lii1llI1iililli1l1I(iIl111lIiiIiiIlIli1, iIlIIli1lIli1i11IiI + 1, lIlliIIlIilli1Iii1iIl))) else lIlliIIlIilli1Iii1iIl, lIlIIi1i1Ii1lI1Ill1ll = iII1II1iilI11111iII(iIl111lIiiIiiIlIli1[iIlIIli1lIli1i11IiI]()) end if i1Il1111iil1Ili1Ili ~= 1 then if i1Il1111iil1Ili1Ili ~= 0 then lIlliIIlIilli1Iii1iIl = iIlIIli1lIli1i11IiI + i1Il1111iil1Ili1Ili - 2 lI1lII1Ii1lil1ilIil = lIlliIIlIilli1Iii1iIl + 1 else lIlliIIlIilli1Iii1iIl = lIlliIIlIilli1Iii1iIl + iIlIIli1lIli1i11IiI - 1 lI1lII1Ii1lil1ilIil = lIlliIIlIilli1Iii1iIl end lIlll1Illiii1I1lI11Ii = 0 for iliIl111II1llliIliI = iIlIIli1lIli1i11IiI, lIlliIIlIilli1Iii1iIl do lIlll1Illiii1I1lI11Ii = lIlll1Illiii1I1lI11Ii + 1 iIl111lIiiIiiIlIli1[iliIl111II1llliIliI] = lIlIIi1i1Ii1lI1Ill1ll[lIlll1Illiii1I1lI11Ii] end else lI1lII1Ii1lil1ilIil = iIlIIli1lIli1i11IiI - 1 end for iliIl111II1llliIliI = lI1lII1Ii1lil1ilIil + 1, i1I11li1I1l1iIl1l1l do iIl111lIiiIiiIlIli1[iliIl111II1llliIliI] = nil end elseif iiIiiiIiIl1IiiiIiii == 17 then iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = ll1IlllIl1iiiIiIiI1[1] else iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = ll1IlllIl1iiiIiIiI1[4] ~= 0 if ll1IlllIl1iiiIiIiI1[2] ~= 0 then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + 1 end end elseif iiIiiiIiIl1IiiiIiii >= 11 then if iiIiiiIiIl1IiiiIiii ~= 12 then local lIlI11iI1IiI1iiiI1i11, IliiIIIl11I1ii1Il11 if ll1IlllIl1iiiIiIiI1[10] then lIlI11iI1IiI1iiiI1i11 = ll1IlllIl1iiiIiIiI1[9] else lIlI11iI1IiI1iiiI1i11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] end if ll1IlllIl1iiiIiIiI1[8] then IliiIIIl11I1ii1Il11 = ll1IlllIl1iiiIiIiI1[6] else IliiIIIl11I1ii1Il11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[2]] end if lIlI11iI1IiI1iiiI1i11 == IliiIIIl11I1ii1Il11 ~= (ll1IlllIl1iiiIiIiI1[7] ~= 0) then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + 1 end elseif ll1IlllIl1iiiIiIiI1[2] == 242 then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i - 1 lIl11ll1II1ii1lI1li1I[il1iIl1i1lIiillIi1i] = { [5] = 7, [7] = (ll1IlllIl1iiiIiIiI1[7] - 65) % 256, [4] = (ll1IlllIl1iiiIiIiI1[4] - 65) % 256 } else for iliIl111II1llliIliI = ll1IlllIl1iiiIiIiI1[7], ll1IlllIl1iiiIiIiI1[4] do iIl111lIiiIiiIlIli1[iliIl111II1llliIliI] = nil end end elseif iiIiiiIiIl1IiiiIiii == 10 then local IliiIIIl11I1ii1Il11 if ll1IlllIl1iiiIiIiI1[8] then IliiIIIl11I1ii1Il11 = ll1IlllIl1iiiIiIiI1[6] else IliiIIIl11I1ii1Il11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[2]] end iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]][IliiIIIl11I1ii1Il11] else iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = { lii1llI1iililli1l1I(i1IlI1iII11llii1III, 1, ll1IlllIl1iiiIiIiI1[4] == 0 and 255 or ll1IlllIl1iiiIiIiI1[4]) } end elseif iiIiiiIiIl1IiiiIiii >= 4 then if iiIiiiIiIl1IiiiIiii < 6 then if iiIiiiIiIl1IiiiIiii == 5 then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + (ll1IlllIl1iiiIiIiI1[3] - Il1IlIIllIill1lI1li) else Illllll1I1l11l1lIIl[ll1IlllIl1iiiIiIiI1[1]] = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] end elseif iiIiiiIiIl1IiiiIiii < 7 then local iIIiIIi1i1iliii1Ill = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] local IliiIIIl11I1ii1Il11 if ll1IlllIl1iiiIiIiI1[8] then IliiIIIl11I1ii1Il11 = ll1IlllIl1iiiIiIiI1[6] else IliiIIIl11I1ii1Il11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[2]] end iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7] + 1] = iIIiIIi1i1iliii1Ill iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = iIIiIIi1i1iliii1Ill[IliiIIIl11I1ii1Il11] elseif iiIiiiIiIl1IiiiIiii ~= 8 then iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] else iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = Illllll1I1l11l1lIIl[ll1IlllIl1iiiIiIiI1[1]] end elseif iiIiiiIiIl1IiiiIiii < 2 then if iiIiiiIiIl1IiiiIiii == 1 then local i1iiiI1IllIili1lli1 = lIlIlIi1illIl11IIi1li[ll1IlllIl1iiiIiIiI1[3]] local lIliiiii1liIlllilI1 = {} if i1iiiI1IllIili1lli1[lIlIi1IIi1I1II11IlII1] > 0 then do local lIl1liI1IlI1iiii1111i = {} lIliiiii1liIlllilI1 = il11l11iIiIIIilI1II({}, { __index = function(lIlliliilIl1l1lllli11, lliii1IlIIl1liIIli1) local lIllIiii11iii1lI1il1i = lIl1liI1IlI1iiii1111i[lliii1IlIIl1liIIli1] return lIllIiii11iii1lI1il1i[1][lIllIiii11iii1lI1il1i[2]] end, __newindex = function(lIlliliilIl1l1lllli11, lliii1IlIIl1liIIli1, i111i1111iIl1i1liII) local lIllIiii11iii1lI1il1i = lIl1liI1IlI1iiii1111i[lliii1IlIIl1liIIli1] lIllIiii11iii1lI1il1i[1][lIllIiii11iii1lI1il1i[2]] = i111i1111iIl1i1liII end }) for iliIl111II1llliIliI = 1, i1iiiI1IllIili1lli1[lIlIi1IIi1I1II11IlII1] do local lIlIIiIIIIil1i1llI111 = lIl11ll1II1ii1lI1li1I[il1iIl1i1lIiillIi1i] if lIlIIiIIIIil1i1llI111[lIlIilIiIIllI1l1III1l] == il1IiIl1I1liliIl11I then lIl1liI1IlI1iiii1111i[iliIl111II1llliIliI - 1] = { iIl111lIiiIiiIlIli1, lIlIIiIIIIil1i1llI111[iIIllI1li1I1II1ii1i] } elseif lIlIIiIIIIil1i1llI111[lIlIilIiIIllI1l1III1l] == lIlIi1i1IiIiillI1l1i1 then lIl1liI1IlI1iiii1111i[iliIl111II1llliIliI - 1] = { lIlli1lilli1II1Iillii, lIlIIiIIIIil1i1llI111[iIIllI1li1I1II1ii1i] } end il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + 1 end if not il1liI1Ii1iill1i1Il[iIl111lIiiIiiIlIli1] then il1liI1Ii1iill1i1Il[iIl111lIiiIiiIlIli1] = {lIl1liI1IlI1iiii1111i} else lIllIiI1lI1IilIlI1ilI(il1liI1Ii1iill1i1Il[iIl111lIiiIiiIlIli1], lIl1liI1IlI1iiii1111i) end end end local l1IIil1IiIil1l111ii = IiI1iiI1illiIII1iII(i1iiiI1IllIili1lli1, Illllll1I1l11l1lIIl, lIliiiii1liIlllilI1) iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = l1IIil1IiIil1l111ii elseif ll1IlllIl1iiiIiIiI1[2] == 118 then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i - 1 lIl11ll1II1ii1lI1li1I[il1iIl1i1lIiillIi1i] = { [5] = 3, [7] = (ll1IlllIl1iiiIiIiI1[7] - 25) % 256, [2] = (ll1IlllIl1iiiIiIiI1[4] - 25) % 256 } else iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] = not iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] end elseif iiIiiiIiIl1IiiiIiii ~= 3 then local lIlI11iI1IiI1iiiI1i11, IliiIIIl11I1ii1Il11 if ll1IlllIl1iiiIiIiI1[10] then lIlI11iI1IiI1iiiI1i11 = ll1IlllIl1iiiIiIiI1[9] else lIlI11iI1IiI1iiiI1i11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[4]] end if ll1IlllIl1iiiIiIiI1[8] then IliiIIIl11I1ii1Il11 = ll1IlllIl1iiiIiIiI1[6] else IliiIIIl11I1ii1Il11 = iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[2]] end iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]][lIlI11iI1IiI1iiiI1i11] = IliiIIIl11I1ii1Il11 elseif not not iIl111lIiiIiiIlIli1[ll1IlllIl1iiiIiIiI1[7]] == (ll1IlllIl1iiiIiIiI1[2] == 0) then il1iIl1i1lIiillIi1i = il1iIl1i1lIiillIi1i + 1 end end end local l1l1IIII11lill111lI, liIIiiiiiIIlilIlIII, iiIlil1illIii11ilii, IliiiiIIII1IiIiI1II = lIll1iIIII1ili1ll11(lIlll1Illiii1I1lI11Ii) if l1l1IIII11lill111lI then if iiIlil1illIii11ilii then return lii1llI1iililli1l1I(iIl111lIiiIiiIlIli1, iiIlil1illIii11ilii, IliiiiIIII1IiIiI1II) end else li1iii1l1ill1iiiI11("Luraph Script:" .. (lIlIllll1Ilil1iI1l1li[il1iIl1i1lIiillIi1i - 1] or "") .. ": " .. I1iIiIll1lIlilii1il(liIIiiiiiIIlilIlIII), 0) end end I1i1lIlli1l11liIill(iIIi1ii1l1i1lIiIIi1, Illllll1I1l11l1lIIl) return iIIi1ii1l1i1lIiIIi1 end local Ill1l11iiiii11lIlIl = lIl1liIII11iiIillIiIi() return IiI1iiI1illiIII1iII(Ill1l11iiiii11lIlIl, Illllll1I1l11l1lIIl)() end iiliIi1ii1IiI1i1llII11lIIIil1il1iII()) 
